# Data: abril 2025
# Autores:
# - Inês Mendes
# - Margarida Tavares
# - Tomás Franco

trigger:
  branches:
    include:
      - '*'

pr:
  branches:
    include:
      - main

variables:
  venvDir: '.venv'
  requirementsFile: 'requirements.txt'
  buildOutputDir: '$(Build.ArtifactStagingDirectory)'

stages:
  - stage: CI
    displayName: 'Integração Contínua (CI)'
    condition: succeeded()
    jobs:
      - job: Lint
        displayName: 'Lint em app.py da branch main'
        pool:
          name: 'grupo2'
        steps:
          - script: |
              python3 -m venv $(venvDir)
              . $(venvDir)/bin/activate
              pip install --upgrade pip
              pip install flake8
              git fetch origin main
              git checkout origin/main -- *.py
              flake8 *.py
            displayName: 'Executar flake8 nos ficheiros Python (main)'

      - job: Testes
        displayName: 'Executar testes de aceitação'
        pool:
          name: 'grupo2'
        steps:
          - script: |
              python3 -m venv $(venvDir)
              . $(venvDir)/bin/activate
              pip install --upgrade pip 
              pip install -r $(requirementsFile)
              pytest teste_aceitacao.py --maxfail=1
            displayName: 'Executar testes de aceitação'

  - stage: Build
    displayName: 'Build do Projeto'
    condition: succeeded()
    jobs:
      - job: BuildJob
        displayName: 'Construção e empacotamento do código'
        pool:
          name: 'grupo2'
        steps:
          - script: |
              python3 -m venv $(venvDir)
              . $(venvDir)/bin/activate
              pip install --upgrade pip
              pip install -r $(requirementsFile)
              echo "Build em andamento..."
              python setup.py sdist bdist_wheel
            displayName: 'Compilar o projeto e gerar pacotes'

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: drop
            displayName: 'Publicar artefatos gerados'

  - stage: CD
    displayName: 'Entrega Contínua (CD)'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: ValidarPR
        displayName: 'Validação no Pull Request'
        pool:
          name: 'grupo2'
        steps:
          - script: |
              echo "Iniciando o deploy"
              # Copia os arquivos para o servidor remoto via SCP
              scp -r $(Build.ArtifactStagingDirectory) user@yourserver:/path/to/deploy
              # Conecta ao servidor via SSH e executa o deploy (exemplo)
              ssh user@yourserver "cd /path/to/deploy && ./start_service.sh"
              echo "Deploy realizado com sucesso"

              # Teste de saúde para garantir que a aplicação está funcionando
              echo "Verificando se a aplicação está funcionando"
              curl -f http://yourserver/healthcheck || exit 1  # Retorna erro caso não esteja ok
            displayName: 'Realizar deploy e verificar funcionamento'





