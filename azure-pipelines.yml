# Data: abril 2025
# Autores:
# - Inês Mendes
# - Margarida Tavares
# - Tomás Franco

trigger:
  branches:
    include:
      - '*'

pr:
  branches:
    include:
      - main

variables:
  venvDir: '$(Build.SourcesDirectory)/.venv'
  requirementsFile: 'requirements.txt'
  buildOutputDir: '$(Build.ArtifactStagingDirectory)'

stages:
  - stage: CI
    displayName: 'Integração Contínua (CI)'
    condition: succeeded()
    jobs:
      - job: Lint
        displayName: 'Lint em ficheiros python'
        pool:
          name: 'grupo2'
        steps:
          - script: |
              python3 -m venv $(venvDir)
              . $(venvDir)/bin/activate
              pip install --upgrade pip
              pip install flake8
              git fetch origin main
              git fetch origin develop
              git checkout origin/main -- *.py
              git checkout origin/develop -- *.py
              flake8 *.py 
            displayName: 'Executar flake8 nos ficheiros Python'
      
      - job: Teste_unitario
        displayName: 'Executar testes unitários'
        pool:
          name: 'grupo2'
        steps:
          - script: |
              python3 -m venv $(venvDir)
              . $(venvDir)/bin/activate
              pip install --upgrade pip 
              pip install -r $(requirementsFile)
              python3 teste_aceitacao.py --maxfail=1 -v
            displayName: 'Executar testes de unitário'

      - job: Teste_aceitacao
        displayName: 'Executar testes de aceitação'
        pool:
          name: 'grupo2'
        steps:
          - script: |
              python3 -m venv $(venvDir)
              . $(venvDir)/bin/activate
              pip install --upgrade pip 
              pip install -r $(requirementsFile)
              pytest teste_aceitacao.py --maxfail=1 -v
            displayName: 'Executar testes de aceitação'

  - stage: Build
    displayName: 'Build do Projeto'
    condition: succeeded()
    jobs:
      - job: BuildJob
        displayName: 'Construção e empacotamento do código'
        pool:
          name: 'grupo2'
        steps:
          - script: |
              python3 -m venv $(venvDir)
              . $(venvDir)/bin/activate
              pip install --upgrade pip setuptools wheel
              pip install --upgrade pip
              pip install -r $(requirementsFile)
              echo "Build em andamento..."
              python setup.py sdist bdist_wheel
            displayName: 'Compilar o projeto e gerar pacotes'

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: drop
            displayName: 'Publicar artefatos gerados'

  - stage: CD
    displayName: 'Entrega Contínua (CD)'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    jobs:
      - job: ValidarPR
        displayName: 'Validação no Pull Request'
        pool:
          name: 'grupo2'
        steps:
          - script: |

              container_ip=68.221.184.225

              user="grupo2" 

              # Copiar artefatos diretamente para o servidor remoto
              echo "A copiar artefatos para o servidor remoto..."
              scp -r $(Build.ArtifactStagingDirectory) $user@$container_ip:/home/$user

              # Conectar ao servidor via SSH e executar o deploy
              echo "A Conectar ao servidor remoto via SSH e executando o deploy..."
              ssh $user@$container_ip "cd /home/$user && ./start_service.sh"

              echo "Deploy realizado com sucesso!"

              # Teste de saúde para garantir que a aplicação está funcionando
              echo "A verificar se a aplicação está a funcionar..."
              curl -f http://$container_ip:5000/healthcheck || exit 1  # Testa o container via IP
            displayName: 'Realizar deploy e verificar funcionamento'







